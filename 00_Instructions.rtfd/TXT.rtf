{\rtf1\ansi\ansicpg1252\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17580\viewh19580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Transaction\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b0 \cf0 Sometimes you want a group of operations (instruction to mongoDB) to happen at the same time and if one fails then we want all to fail.\
Example\
If you want to update the customers collection and the rentals collection.\
So if a customer borrows a movie and the rental fails to be recorded in the rentals collection then we do not want to record it in the customers collection.\
Instead we want to throw an error and roll back any changes that may have been made to the database.\
\
We can use a module to handle these types of transactions.\
\
1. Install a module called fawn: npm i fawn\
2. Open routes>rentals.js\
}